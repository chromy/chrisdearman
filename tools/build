#!/usr/bin/env python3
import os
import subprocess
import pathlib
import json

ROOT = os.path.dirname(os.path.dirname(__file__))
OUT = os.path.join(ROOT, "out")
SITE = os.path.join(OUT, "site")
SRC_PATH = os.path.join(ROOT, "src")
INDEX_TEMPLATE_PATH = os.path.join(SRC_PATH, "index.html")
CSS_PATH = os.path.join(SRC_PATH, "style.css")
JS_PATH = os.path.join(SRC_PATH, "script.js")
FAVICON_PATH = os.path.join(SRC_PATH, "favicon-data-url.txt")
OBIT_PATH = os.path.join(SRC_PATH, "obit.txt")

OUTPUT_PATH = os.path.join(SITE, "index.html")
ASSETS_PATH = os.path.join(SITE, "assets")

MEMORY_HTML = '''
<div class="flex pt-3">
  <div class="mb-4 flex-shrink-0 sm:mb-0 sm:mr-4">
    <img class="inline-block h-16 w-16 rounded-full" src="/assets/hector.png-5858c2ed1b700430e199cfa74c8531cacc0e3106f3541a5c88791368e39a1f81" alt="">
  </div>
  <div>
    <p class="mt-1">{text}</p>
    <h4 style="font-variant-caps: small-caps;">{contributor}</h4>
  </div>
</div>
'''

def main():
  pathlib.Path(OUT).mkdir(parents=True, exist_ok=True)
  pathlib.Path(SITE).mkdir(parents=True, exist_ok=True)

  try:
    os.unlink(ASSETS_PATH)
  except FileNotFoundError:
    pass
  os.symlink("../../assets", ASSETS_PATH)

  with open(INDEX_TEMPLATE_PATH) as f:
    template = f.read()
  css = subprocess.check_output([
    "npx",
    "tailwindcss",
    "-i",
    CSS_PATH,
  ]).decode("utf8")
  with open(JS_PATH) as f:
    js = f.read()
  with open(OBIT_PATH) as f:
    obit = f.read()
  with open(FAVICON_PATH) as f:
    favicon = f.read()

  def memory_html(contributor, text):
      return MEMORY_HTML.format(contributor=contributor, text=text)

  memories = ""
  for name in os.listdir(SRC_PATH):
    if not name.endswith(".json"):
      continue
    path = os.path.join(SRC_PATH, name)
    with open(path) as f:
      j = json.load(f)
      try:
        memories = memories + memory_html(j["contributor"], j["text"])
      except KeyError:
          continue

  index_souce = template.format(
    css=css,
    js=js,
    obit=obit,
    memories=memories,
    favicon=favicon,
  )
  with open(OUTPUT_PATH, "w") as f:
    f.write(index_souce)

if __name__ == "__main__":
  main()
